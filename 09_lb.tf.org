#
# フロントエンドの構成 / 転送ルール
# docs: https://cloud.google.com/load-balancing/docs/https?hl=ja#forwarding-rule
#
## HTTPS
resource "google_compute_global_forwarding_rule" "https" {
  name                  = "${local.prefix}-${local.external_lb["lb_name"]}-https-forwarding-rule"
  ip_protocol           = "TCP"
  load_balancing_scheme = "EXTERNAL_MANAGED"
  port_range            = "443"
  target                = google_compute_target_https_proxy.https_proxy.self_link
  ip_address            = google_compute_global_address.lb_ip.address
}

#
# フロントエンドの構成 / ターゲットプロキシ
# docs: https://cloud.google.com/load-balancing/docs/https?hl=ja#target-proxies
#
resource "google_compute_target_https_proxy" "https_proxy" {
  name             = "${local.prefix}-${local.external_lb["lb_name"]}-https-proxy"
  url_map          = google_compute_url_map.url_map.self_link
  ssl_certificates = [google_compute_managed_ssl_certificate.managed_ssl_certificate.self_link]
}

#
# SSL 証明書
# docs: https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs?hl=ja
#
resource "google_compute_managed_ssl_certificate" "managed_ssl_certificate" {
  name = "${local.prefix}-${local.external_lb["lb_name"]}-ssl-cert"
  managed {
    domains = ["www.example.com"]
  }
}

## HTTP
resource "google_compute_global_forwarding_rule" "http" {
  name                  = "${local.prefix}-${local.external_lb["lb_name"]}-http-forwarding-rule"
  ip_protocol           = "TCP"
  load_balancing_scheme = "EXTERNAL_MANAGED"
  port_range            = "80"
  target                = google_compute_target_http_proxy.http_proxy.self_link
  ip_address            = google_compute_global_address.lb_ip.address
}

resource "google_compute_target_http_proxy" "http_proxy" {
  name    = "${local.prefix}-${local.external_lb["lb_name"]}-http-proxy"
  url_map = google_compute_url_map.url_map.self_link
}

resource "google_compute_global_address" "lb_ip" {
  name = "${local.prefix}-${local.external_lb["lb_name"]}-ip"
}

#
# URL マップ
# docs: https://cloud.google.com/load-balancing/docs/https?hl=ja#url-maps
#
resource "google_compute_url_map" "url_map" {
  name            = "${local.prefix}-${local.external_lb["lb_name"]}"
  default_service = google_compute_backend_service.backend_service.self_link

  host_rule {
    hosts        = ["*"]
    path_matcher = "allpaths"
  }

  path_matcher {
    name            = "allpaths"
    default_service = google_compute_backend_service.backend_service.self_link

    path_rule {
      paths   = ["/images*"]
      service = google_compute_backend_bucket.backend_bucket.self_link
    }
  }
}

#
# バックエンドの構成 / バックエンドサービス
# docs: https://cloud.google.com/load-balancing/docs/backend-service?hl=ja
#
resource "google_compute_backend_service" "backend_service" {
  name                  = "${local.prefix}-${local.external_lb["lb_name"]}-backend-svc"
  load_balancing_scheme = "EXTERNAL_MANAGED"
  port_name             = "http"
  protocol              = "HTTP"
  timeout_sec           = 10

  log_config {
    enable      = true
    sample_rate = 1
  }

  backend {
    group = google_compute_region_instance_group_manager.mig.instance_group
  }

  health_checks = [
    google_compute_health_check.lb_check.self_link,
  ]

  security_policy = google_compute_security_policy.backend.id

  enable_cdn = false
}

#
# ヘルスチェックの概要
# docs: https://cloud.google.com/load-balancing/docs/health-check-concepts?hl=ja
#
resource "google_compute_health_check" "lb_check" {
  name                = "${local.prefix}-${local.external_lb["lb_name"]}-health-check"
  check_interval_sec  = 5
  timeout_sec         = 5
  healthy_threshold   = 2
  unhealthy_threshold = 2

  http_health_check {
    request_path = "/"
    port         = 80
  }
}

#
# ヘルスチェックのファイアウォール ルール
# docs: https://cloud.google.com/load-balancing/docs/health-checks?hl=ja#fw-rule
#
resource "google_compute_firewall" "allow_health_check" {
  name    = "${local.prefix}-${local.external_lb["lb_name"]}-allow-health-check"
  network = google_compute_network.vpc.self_link

  allow {
    protocol = "tcp"
    ports    = ["80"]
  }

  source_ranges = ["35.191.0.0/16", "130.211.0.0/22"]
}

# ロードバランサのIPアドレス
output "lb_ip" {
  value = google_compute_global_address.lb_ip.address
}
